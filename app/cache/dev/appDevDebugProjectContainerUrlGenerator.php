<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevDebugProjectContainerUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\MainController::homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Security:login',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Security:userDashboard',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/dashboard',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reset_password' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'AppBundle:Resetting:reset',  ),  2 =>   array (    '_method' => 'POST|GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reset_password_check_token' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'AppBundle:Resetting:checkToken',  ),  2 =>   array (    '_method' => 'POST|GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/check_token',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'resetting_password_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Resetting:sendEmail',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'check_if_username_exist' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Registration:checkIfUsernameExist',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/check_if_username_exist',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'check_if_email_exist' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Registration:checkIfEmailExist',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/check_if_email_exist',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_registration' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Registration:register',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Registration:checkEmail',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'AppBundle:Registration:confirm',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Registration:confirmed',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'confirmation_token_expired' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Registration:confirmationTokenExpired',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/confirmation_token_expired',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'social_user_registration' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:SocialRegistration:socialRegister',  ),  2 =>   array (    '_method' => 'POST|GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/social_register',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'auth_google' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:SocialRegistration:authGoogle',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/auth/google',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'auth_facebook' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:SocialRegistration:authFacebook',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/auth/facebook',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_social_user' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:SocialRegistration:updateSocialUser',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update_social_user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:ChangePassword:changePassword',  ),  2 =>   array (    '_method' => 'POST|GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'current_user_short_details' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/UserApi:currentUserShortDetails',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/current_user_short_details',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'current_user_full_details' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/UserApi:currentUserFullDetails',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/current_user_full_details',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_all_users' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/UserApi:adminAllUsers',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/all_users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_user_profile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/UserApi:updateUserProfile',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/update_user_profile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_user_email_notification_status' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/UserApi:updateUserEmailNotification',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/update_user_email_notification_status',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'books_search_by_keyword_amazon' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/BookManagementApi:searchByKeywordAmazonApi',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/book/search_by_keyword_amazon',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'books_search_by_keyword_amazon_api' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/BookManagementApi:searchByKeywordAmazonApiWithApiCall',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/book/search_by_keyword_amazon_api',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'books_search_by_asin_amazon' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/BookManagementApi:searchByAsinAmazonApi',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/book/search_by_asin_amazon',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'books_search_by_isbn_amazon' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/BookManagementApi:searchByIsbnAmazonApi',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/book/search_by_isbn_amazon',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'books_search_by_isbn_campus_books' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/BookManagementApi:searchByIsbnCampusBooksApi',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/book/search_by_isbn_campus_books',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_lowest_online_price_campus_books_by_isbn' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/BookManagementApi:getLowestPriceByIsbnCampusBooksApi',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/book/get_lowest_price_by_isbn_campus_books',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_amazon_cart_create_url' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/BookManagementApi:getAmazonCartCreateUrl',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/book/get_amazon_cart_create_url',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_campus_deals_by_isbn_api' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/BookManagementApi:getCampusDealsByIsbnApi',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/book/get_campus_deals_by_isbn_api',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_campus_deals_by_isbn' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/BookManagementApi:getCampusDealsByIsbn',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/book/get_campus_deals_by_isbn',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_new_sell_book' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/BookManagementApi:addNewSellBook',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/book/add_new_sell_book',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_new_custom_sell_book' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/BookManagementApi:addNewCustomSellBook',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/book/add_new_custom_sell_book',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'campus_list_by_university' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/CampusManagementApi:campusListByUniversity',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/campus/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'campus_details_with_university_and_state' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/CampusManagementApi:campusDetailsWithUniversityAndState',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/campus/details_with_university_and_state',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_campus' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/CampusManagementApi:updateCampus',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/campus/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'save_new_campus' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/CampusManagementApi:saveNewCampus',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/campus/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_university' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/CampusManagementApi:deleteUniversity',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/university/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'all_countries' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/CountryManagementApi:countryList',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/country/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'all_countries_api' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/CountryManagementApi:countryListAdmin',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/country/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'all_referrals_api' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/ReferralManagementApi:referralListAdmin',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/referral/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'all_referrals' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/ReferralManagementApi:referralList',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/referral/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'all_states_by_country' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/StateManagementApi:statesByCountry',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/state/list_by_country',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'all_states_by_country_api' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/StateManagementApi:statesByCountryAdmin',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/state/list_by_country',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'university_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/UniversityManagementApi:universityAutocompleteActivatedSearchList',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/university/autocomplete_activated_search_list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'university_name_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/UniversityManagementApi:universityAutocompleteNameSearchList',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/university/autocomplete_university_name_search_list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'university_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/UniversityManagementApi:universitySearchAdmin',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/university/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_university' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/UniversityManagementApi:updateUniversity',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/university/update_university',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'save_new_university' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/UniversityManagementApi:saveNewUniversity',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/university/save_new_university',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'save_new_university_logged_in_user' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/UniversityManagementApi:saveNewUniversityLoggedInUser',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/university/save_new_university_logged_in_user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_all_non_approved_universities' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminUniversityManagementApi:getAllNonApprovedUniversities',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/get_all_non_approved_universities',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_all_activated_universities' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminUniversityManagementApi:getAllActivatedUniversities',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/get_all_activated_universities',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_all_deactivated_universities' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminUniversityManagementApi:getAllDeactivatedUniversities',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/get_all_deactivated_universities',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'save_edited_university_data_only' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminUniversityManagementApi:saveEditedUniversityDataOnly',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/save_edited_university_data_only',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'approve_multiple_universities' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminUniversityManagementApi:approveMultipleUniversities',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/approve_multiple_universities',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_university_details' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminUniversityManagementApi:updateUniversityDetails',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/update_university_details',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_all_similar_universities' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminUniversityManagementApi:getAllSimilarUniversities',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/get_all_similar_universities',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'merge_universities' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminUniversityManagementApi:mergeUniversities',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/merge_universities',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_contact_api' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/ContactManagementApi:addNewContactApi',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/contact/add_contact_api',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_contact' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/ContactManagementApi:addNewContact',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/contact/add_contact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_messages' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/ContactManagementApi:getMessages',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/contact/get_messages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'send_messages' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/ContactManagementApi:sendMessages',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/contact/send_messages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'send_messages_without_mailing' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/ContactManagementApi:sendMessagesWithoutMailing',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/contact/send_messages_without_mailing',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_book_deals_i_have_contacted_for' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/BookDealManagementApi:getBooksIHaveContactedFor',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/book_deal/get_book_deals_i_have_contacted_for',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_book_deals_i_have_created' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/BookDealManagementApi:getBooksIHaveCreated',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/book_deal/get_book_deals_i_have_created',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sell_book_to_user' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/BookDealManagementApi:sellBookToUser',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/book_deal/sell_book_to_user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_book_deals_i_have_created_and_sold' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/BookDealManagementApi:getBooksIHaveCreatedAndSold',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/book_deal/get_book_deals_i_have_created_and_sold',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_book_deals_i_have_bought' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/BookDealManagementApi:getBooksIHaveBought',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/book_deal/get_book_deals_i_have_bought',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'change_book_deal_status' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/BookDealManagementApi:changeBookDealStatus',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/book_deal/change_book_deal_status',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_lowest_campus_deal_price' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/BookDealManagementApi:getLowestCampusDealPrice',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/book_deal/get_lowest_campus_deal_price',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_book_deal' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/BookDealManagementApi:updateBookDeal',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/book_deal/update_book_deal',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_book_deal' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/BookDealManagementApi:deleteBookDeal',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/book_deal/delete_book_deal',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_activated_book_deal_of_user' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/BookDealManagementApi:getActivatedBookDealOfUser',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/book_deal/get_activated_book_deal_of_user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_all_activated_deals_for_message_board' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/BookDealManagementApi:getAllActivatedDealsForMessageBoard',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/book_del/get_all_activated_deals_for_message_board',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_all_data_for_new_contact_in_message_board' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/BookDealManagementApi:getAllDataForNewContactInMessageBoard',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/star/get_all_data_for_new_contact_in_message_board',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_book_to_wish_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/WishListManagementApi:addBookToWishList',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/wishlist/add_book_to_wish_list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_my_wishlist' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/WishListManagementApi:getMyWishList',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/wishlist/get_my_wishlist',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'remove_wishlist_item' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/WishListManagementApi:removeWishListItem',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/wishlist/remove_wishlist_item',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'check_if_added_into_wishlist' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/WishListManagementApi:checkIfAddedIntoWishlist',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/wishlist/check_if_added_into_wishlist',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_all_non_approved_user' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminUserApi:getAllNonApprovedUser',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/get_all_non_approved_user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_all_approved_user' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminUserApi:getAllApprovedUser',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/get_all_approved_user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_all_admin_user' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminUserApi:getAllAdminUser',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/get_all_admin_user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_update_users' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminUserApi:adminUpdateUserData',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/update_user_data',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'approve_users' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminUserApi:approveUsers',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/approve_users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_admin_user' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminUserApi:addAdminUser',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/add_admin_user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_all_book_deals' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminBookDealApi:getAllBookDeals',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/get_all_book_deals',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_student_quotes' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminQuoteApi:getStudentQuotes',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/get_student_quotes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_university_quotes' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminQuoteApi:getUniversityQuotes',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/get_university_quotes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_quote' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminQuoteApi:updateQuote',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/update_quote',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_quote' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminQuoteApi:addQuote',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/add_quote',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_quote' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminQuoteApi:deleteQuote',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/delete_quote',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_activated_student_quote' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/QuoteApi:getActivatedStudentQuotes',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/quote/get_activated_student_quote',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_activated_university_quote' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/QuoteApi:getActivatedUniversityQuotes',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/quote/get_activated_university_quote',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_news' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminNewsApi:getNews',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/get_news',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_news' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminNewsApi:addNews',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/add_news',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_news' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminNewsApi:updateNews',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/update_news',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_active_news' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/NewsApi:getActiveNews',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/news/get_activated_news',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_single_news' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/NewsApi:getSingleNews',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/news/get_single_news',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'send_message' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/ContactUsApi:sendMessage',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/contactus/send_message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'send_mails_to_friends' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/ContactUsApi:sendMailsToFriends',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/contactus/send_mails_to_friends',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'send_mails_to_user_friends' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/ContactUsApi:sendMailsToUserFriends',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/contactus/send_mails_to_user_friends',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_newsletter_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/NewsletterApi:addNewsletterEmail',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/newsletter/add_newsletter_email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_all_newsletter_emails' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/NewsletterApi:getAllNewsletterEmails',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/get_all_newsletter_emails',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'export_all_newsletter_data_into_csv' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/NewsletterApi:exportAllNewsletterEmails',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/export_all_newsletter_data_into_csv',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_book_deal_to_star_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/StarManagementApi:addBookDealToStarList',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/star/add_book_deal_to_star_list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_log' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminLogApi:getLog',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/get_log',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_all_databases' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminDatabaseApi:getAllDatabases',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/get_all_databases',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'download_database' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminDatabaseApi:downloadDatabases',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/admin/download_database',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'clear_public_database_directory' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:Api/AdminDatabaseApi:clearPublicDatabaseDirectory',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clear_public_database_directory',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_amazon_prices' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle:DBManagement:getAmazonPrices',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/get_amazon_prices',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
